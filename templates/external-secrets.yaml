{{- if .Values.pullSecret.enabled }}

apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: external-{{ .Values.pullSecret.secretName }}
  labels:
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/name: {{ .Values.appName }}
    app.kubernetes.io/version: {{ .Chart.Version | quote }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
spec:
  refreshInterval: "15s"
  secretStoreRef:
    name: {{ .Values.vaultStorage }}
    kind: SecretStore
  target:
    name: {{ .Values.pullSecret.secretName }}
    template:
      type: kubernetes.io/dockerconfigjson
      data:
        {{ .Values.pullSecret.secretKey }}: |
          {"auths":{"{{`{{ .registry2Host }}`}}":{"username":"{{`{{ .registry2User }}`}}","password":"{{`{{ .registry2Password }}`}}"}}}

  data:
    - secretKey: registry2Host
      remoteRef:
        key: {{ .Values.vault.registry2.host.key }}
        property: {{ .Values.vault.registry2.host.property }}
    - secretKey: registry2User
      remoteRef:
        key: {{ .Values.vault.registry2.user.key }}
        property: {{ .Values.vault.registry2.user.property }}
    - secretKey: registry2Password
      remoteRef:
        key: {{ .Values.vault.registry2.password.key }}
        property: {{ .Values.vault.registry2.password.property }}
{{- end}}
---
{{- if .Values.githubPat }}

apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: external-{{ .Values.secretName }}
  labels:
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/name: {{ .Values.appName }}
    app.kubernetes.io/version: {{ .Chart.Version | quote }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
spec:
  refreshInterval: "15s"
  secretStoreRef:
    name: {{ .Values.vaultStorage }}
    kind: SecretStore
  target:
    name: {{ .Values.secretName }}
  data:
    - secretKey: {{ .Values.secretKey }}
      remoteRef:
        key: {{ .Values.vault.github.key }}
        property: {{ .Values.vault.github.property }}

{{- end }}
---
{{- if .Values.psrSecrets.enabled }}

apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: external-{{ .Values.psrSecrets.secretName }}
  labels:
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/name: {{ .Values.appName }}
    app.kubernetes.io/version: {{ .Chart.Version | quote }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
spec:
  refreshInterval: "15s"
  secretStoreRef:
    name: {{ .Values.vaultStorage }}
    kind: SecretStore
  target:
    name: {{ .Values.psrSecrets.secretName }}
    template:
      data:
        ###############################################################################################################
        #                                           SECURITY WARNING !!!!!!                                           #
        # This template pulls sensitive values out of Vault. The Ploigos Step Runner will PRINT THEM OUT IN THE       #
        # PIPELINE LOG  unless it knows to obfuscate them. Currently, PSR decides which things to obfuscate based     #
        # on a regex. If the key contains "username" or "password" (case insensitive), the value is redacted.         #
        # Otherwise, the value is printed in plain text. If you have a value to add here and the key does not match   #
        # this pattern, please request (or make) an enhancement to the Ploigos Step Runner to cover your use case.    #
        ###############################################################################################################
        {{ .Values.psrSecrets.secretName }}.yml: |
          step-runner-config:
            config-decryptors:
              - implementer: ObfuscationDefaults
            global-defaults:
              maven-servers:
                {{ .Values.mvn.ServerName }}:
                  id: {{ .Values.mvn.ServerName }}
                  url: {{`{{ .mvnHost }}`}}
                  username: {{`{{ .mvnUser }}`}}
                  password: {{`{{ .mvnPassword }}`}}
              container-registries:
                {{`{{ .registry0Host }}`}}:
                  username: {{`{{ .registry0User }}`}}
                  password: {{`{{ .registry0Password }}`}}
                {{`{{ .registry1Host }}`}}:
                  username: {{`{{ .registry1User }}`}}
                  password: {{`{{ .registry1Password }}`}}
                {{`{{ .registry2Host }}`}}:
                  username: {{`{{ .registry2User }}`}}
                  password: {{`{{ .registry2Password }}`}}
            sign-container-image:
            - implementer: PodmanSign
              config:
                container-image-signature-destination-username: {{`{{ .registry2User }}`}}
                container-image-signature-destination-password: {{`{{ .registry2Password }}`}}
                signer-pgp-private-key: |
                  {{`{{ .podmansignPrivatekey }}`}}
            deploy:
            - implementer: ArgoCDDeploy
              config:
                argocd-username: {{`{{ .argocdUsername }}`}}
                argocd-password: {{`{{ .argocdPassword }}`}}
                git-username: {{`{{ .gitUsername }}`}}
                git-password: {{`{{ .gitPassword }}`}}
            report:
            - implementer: ResultArtifactsArchive
              config:
                results-archive-destination-username: {{`{{ .registry2User }}`}}
                results-archive-destination-password: {{`{{ .registry2Password }}`}}

  data:
    - secretKey: registry0Host
      remoteRef:
        key: {{ .Values.vault.registry0.host.key }}
        property: {{ .Values.vault.registry0.host.property }}
    - secretKey: registry0User
      remoteRef:
        key: {{ .Values.vault.registry0.user.key }}
        property: {{ .Values.vault.registry0.user.property }}
    - secretKey: registry0Password
      remoteRef:
        key: {{ .Values.vault.registry0.password.key }}
        property: {{ .Values.vault.registry0.password.property }}
    - secretKey: registry1Host
      remoteRef:
        key: {{ .Values.vault.registry1.host.key }}
        property: {{ .Values.vault.registry1.host.property }}
    - secretKey: registry1User
      remoteRef:
        key: {{ .Values.vault.registry1.user.key }}
        property: {{ .Values.vault.registry1.user.property }}
    - secretKey: registry1Password
      remoteRef:
        key: {{ .Values.vault.registry1.password.key }}
        property: {{ .Values.vault.registry1.password.property }}
    - secretKey: registry2Host
      remoteRef:
        key: {{ .Values.vault.registry2.host.key }}
        property: {{ .Values.vault.registry2.host.property }}
    - secretKey: registry2User
      remoteRef:
        key: {{ .Values.vault.registry2.user.key }}
        property: {{ .Values.vault.registry2.user.property }}
    - secretKey: registry2Password
      remoteRef:
        key: {{ .Values.vault.registry2.password.key }}
        property: {{ .Values.vault.registry2.password.property }}
    - secretKey: mvnHost
      remoteRef:
        key: {{ .Values.vault.mvn.host.key }}
        property: {{ .Values.vault.mvn.host.property }}
    - secretKey: mvnUser
      remoteRef:
        key: {{ .Values.vault.mvn.user.key }}
        property: {{ .Values.vault.mvn.user.property }}
    - secretKey: mvnPassword
      remoteRef:
        key: {{ .Values.vault.mvn.password.key }}
        property: {{ .Values.vault.mvn.password.property }}
    - secretKey: argocdPassword
      remoteRef:
        key: {{ .Values.vault.argocd.password.key }}
        property: {{ .Values.vault.argocd.password.property }}
    - secretKey: argocdUsername
      remoteRef:
        key: {{ .Values.vault.argocd.username.key }}
        property: {{ .Values.vault.argocd.username.property }}
    - secretKey: gitUsername
      remoteRef:
        key: {{ .Values.vault.git.username.key }}
        property: {{ .Values.vault.git.username.property }}
    - secretKey: gitPassword
      remoteRef:
        key: {{ .Values.vault.git.password.key }}
        property: {{ .Values.vault.git.password.property }}
    - secretKey: podmansignPrivatekey
      remoteRef:
        key: {{ .Values.vault.podmansign.privatekey.key}}
        property: {{ .Values.vault.podmansign.privatekey.property }}

{{- end }}
---
apiVersion: v1
data:
  {{ .Values.vaultKey }}: cm9vdA==
kind: Secret
metadata:
  name: {{ .Values.vaultSecret }}
  labels:
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/name: {{ .Values.appName }}
    app.kubernetes.io/version: {{ .Chart.Version | quote }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
type: Opaque
---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: {{ .Values.vaultStorage }}
  labels:
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/name: {{ .Values.appName }}
    app.kubernetes.io/version: {{ .Chart.Version | quote }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
spec:
  provider:
    vault:
      server: "http://vault-internal.vault.svc.cluster.local:8200"
      path: "secret"
      version: "v2"
      auth:
        tokenSecretRef:
          name: "{{ .Values.vaultSecret }}"
          key: "{{ .Values.vaultKey }}"
